// This auto_tester module is an automated tester to run some pre-defined test cases
// It cycles through the states when the start input signal is set to HIGH
// This module is instantiated with the parameters INPUT_X, INPUT_Y, OPCODE and EXPECTED_OUTPUT for each test case
// The state transitions occur when the corresponding test case's DONE signal is HIGH
// Else, if the test case terminates in the ERROR_2 state, this module will be stuck at that test case
// Most of this module is generated by generator.py

module auto_tester (
    input clk,  // clock
    input rst,  // reset
    input start,
    input restart_btn,
    input forced_error,
    output io_seg[8],
    output io_sel[4],
    output opcode_led[6]
  ) {

  .clk(clk) {
    button_conditioner button_cond;
    edge_detector edge (#RISE(1), #FALL(0));
    button_conditioner required_error;
    edge_detector error_edge (#RISE(1), #FALL(0));

    .rst(rst) {
      multi_seven_seg seg_display;
      fsm autostate = {STANDBY, TEST_0, TEST_1, TEST_2, TEST_3, TEST_4, TEST_5, TEST_6, TEST_7, TEST_8, TEST_9, TEST_10, TEST_11, TEST_12, TEST_13, TEST_14, TEST_15, TEST_16, TEST_17, TEST_18, TEST_19, TEST_20, TEST_21, TEST_22, TEST_23, TEST_24, TEST_25, TEST_26, TEST_27, TEST_28, TEST_29, TEST_30, TEST_31, TEST_32, TEST_33, TEST_34, TEST_35, TEST_36, TEST_37, TEST_38, TEST_39, TEST_40, TEST_41, TEST_42, TEST_43, TEST_44, TEST_45, TEST_46, TEST_47, TEST_48, TEST_49, TEST_50, TEST_51, TEST_52, TEST_53, TEST_54, TEST_55, TEST_56, TEST_57, TEST_58, TEST_59, TEST_60, TEST_61, TEST_62, TEST_63, TEST_64, TEST_65, TEST_66, TEST_67, TEST_68, TEST_69, TEST_70, TEST_71, TEST_72, TEST_73, TEST_74, TEST_75, TEST_76, TEST_77, DONE, ERROR};
      statement_tester test_0 (#TEST_ID_HIGH(0), #TEST_ID_LOW(0), #INPUT_X(16habcd), #INPUT_Y(16hef42), #OPCODE(6b000000), #EXPECTED_OUTPUT(16h9b0f));
      statement_tester test_1 (#TEST_ID_HIGH(0), #TEST_ID_LOW(1), #INPUT_X(16h0369), #INPUT_Y(16h0369), #OPCODE(6b000000), #EXPECTED_OUTPUT(16h06d2));
      statement_tester test_2 (#TEST_ID_HIGH(0), #TEST_ID_LOW(2), #INPUT_X(16h0369), #INPUT_Y(16h0000), #OPCODE(6b000001), #EXPECTED_OUTPUT(16h0369));
      statement_tester test_3 (#TEST_ID_HIGH(0), #TEST_ID_LOW(3), #INPUT_X(16habcd), #INPUT_Y(16habcd), #OPCODE(6b000001), #EXPECTED_OUTPUT(16h0000));
      statement_tester test_4 (#TEST_ID_HIGH(0), #TEST_ID_LOW(4), #INPUT_X(16h7fff), #INPUT_Y(16h7fff), #OPCODE(6b000100), #EXPECTED_OUTPUT(16h0001));
      statement_tester test_5 (#TEST_ID_HIGH(0), #TEST_ID_LOW(5), #INPUT_X(16h7fff), #INPUT_Y(16h0000), #OPCODE(6b000100), #EXPECTED_OUTPUT(16h0000));
    
    
      statement_tester test_9 (#TEST_ID_HIGH(0), #TEST_ID_LOW(9), #INPUT_X(16h0369), #INPUT_Y(16hff28), #OPCODE(6b000110), #EXPECTED_OUTPUT(16hff31));
      statement_tester test_10 (#TEST_ID_HIGH(1), #TEST_ID_LOW(0), #INPUT_X(16hfff2), #INPUT_Y(16hfff3), #OPCODE(6b000110), #EXPECTED_OUTPUT(16hffff));
      statement_tester test_11 (#TEST_ID_HIGH(1), #TEST_ID_LOW(1), #INPUT_X(16h03e8), #INPUT_Y(16h0369), #OPCODE(6b000110), #EXPECTED_OUTPUT(16h007f));

      statement_tester test_24 (#TEST_ID_HIGH(2), #TEST_ID_LOW(4), #INPUT_X(16habcd), #INPUT_Y(16hdede), #OPCODE(6b010000), #EXPECTED_OUTPUT(16h0000));
      statement_tester test_25 (#TEST_ID_HIGH(2), #TEST_ID_LOW(5), #INPUT_X(16h2f2f), #INPUT_Y(16h0101), #OPCODE(6b010000), #EXPECTED_OUTPUT(16h0000));
      statement_tester test_26 (#TEST_ID_HIGH(2), #TEST_ID_LOW(6), #INPUT_X(16h2af0), #INPUT_Y(16hafe0), #OPCODE(6b010001), #EXPECTED_OUTPUT(16h500f));
      statement_tester test_27 (#TEST_ID_HIGH(2), #TEST_ID_LOW(7), #INPUT_X(16hff00), #INPUT_Y(16h00ff), #OPCODE(6b010001), #EXPECTED_OUTPUT(16h0000));

      statement_tester test_30 (#TEST_ID_HIGH(3), #TEST_ID_LOW(0), #INPUT_X(16h2140), #INPUT_Y(16hf0f0), #OPCODE(6b010011), #EXPECTED_OUTPUT(16hdebf));
      statement_tester test_31 (#TEST_ID_HIGH(3), #TEST_ID_LOW(1), #INPUT_X(16h8c67), #INPUT_Y(16h0f0f), #OPCODE(6b010011), #EXPECTED_OUTPUT(16h7398));

      statement_tester test_34 (#TEST_ID_HIGH(3), #TEST_ID_LOW(4), #INPUT_X(16hf0f0), #INPUT_Y(16h2140), #OPCODE(6b010101), #EXPECTED_OUTPUT(16hdebf));
      statement_tester test_35 (#TEST_ID_HIGH(3), #TEST_ID_LOW(5), #INPUT_X(16h0f0f), #INPUT_Y(16h8c67), #OPCODE(6b010101), #EXPECTED_OUTPUT(16h7398));
      statement_tester test_36 (#TEST_ID_HIGH(3), #TEST_ID_LOW(6), #INPUT_X(16hffff), #INPUT_Y(16hffff), #OPCODE(6b010110), #EXPECTED_OUTPUT(16h0000));
      statement_tester test_37 (#TEST_ID_HIGH(3), #TEST_ID_LOW(7), #INPUT_X(16hffff), #INPUT_Y(16h0000), #OPCODE(6b010110), #EXPECTED_OUTPUT(16hffff));
      statement_tester test_38 (#TEST_ID_HIGH(3), #TEST_ID_LOW(8), #INPUT_X(16h2af0), #INPUT_Y(16hafe0), #OPCODE(6b010111), #EXPECTED_OUTPUT(16hd51f));
      statement_tester test_39 (#TEST_ID_HIGH(3), #TEST_ID_LOW(9), #INPUT_X(16hff00), #INPUT_Y(16h00ff), #OPCODE(6b010111), #EXPECTED_OUTPUT(16hffff));
      statement_tester test_40 (#TEST_ID_HIGH(4), #TEST_ID_LOW(0), #INPUT_X(16h0000), #INPUT_Y(16hffff), #OPCODE(6b011000), #EXPECTED_OUTPUT(16h0000));
      statement_tester test_41 (#TEST_ID_HIGH(4), #TEST_ID_LOW(1), #INPUT_X(16hffff), #INPUT_Y(16hffff), #OPCODE(6b011000), #EXPECTED_OUTPUT(16hffff));
      statement_tester test_42 (#TEST_ID_HIGH(4), #TEST_ID_LOW(2), #INPUT_X(16h2af0), #INPUT_Y(16hafe0), #OPCODE(6b011001), #EXPECTED_OUTPUT(16h7aef));
      statement_tester test_43 (#TEST_ID_HIGH(4), #TEST_ID_LOW(3), #INPUT_X(16hff00), #INPUT_Y(16h00ff), #OPCODE(6b011001), #EXPECTED_OUTPUT(16h0000));
      statement_tester test_44 (#TEST_ID_HIGH(4), #TEST_ID_LOW(4), #INPUT_X(16h2121), #INPUT_Y(16h4242), #OPCODE(6b011010), #EXPECTED_OUTPUT(16h2121));
      statement_tester test_45 (#TEST_ID_HIGH(4), #TEST_ID_LOW(5), #INPUT_X(16h4242), #INPUT_Y(16h4242), #OPCODE(6b011010), #EXPECTED_OUTPUT(16h4242));
     
      statement_tester test_48 (#TEST_ID_HIGH(4), #TEST_ID_LOW(8), #INPUT_X(16h4242), #INPUT_Y(16h2121), #OPCODE(6b011100), #EXPECTED_OUTPUT(16h2121));
      statement_tester test_49 (#TEST_ID_HIGH(4), #TEST_ID_LOW(9), #INPUT_X(16h4242), #INPUT_Y(16h4242), #OPCODE(6b011100), #EXPECTED_OUTPUT(16h4242));

      statement_tester test_52 (#TEST_ID_HIGH(5), #TEST_ID_LOW(2), #INPUT_X(16h0000), #INPUT_Y(16hffff), #OPCODE(6b011110), #EXPECTED_OUTPUT(16hffff));
      statement_tester test_53 (#TEST_ID_HIGH(5), #TEST_ID_LOW(3), #INPUT_X(16h0001), #INPUT_Y(16h0010), #OPCODE(6b011110), #EXPECTED_OUTPUT(16h0011));
      statement_tester test_54 (#TEST_ID_HIGH(5), #TEST_ID_LOW(4), #INPUT_X(16h2e45), #INPUT_Y(16h1984), #OPCODE(6b011111), #EXPECTED_OUTPUT(16hffff));
      statement_tester test_55 (#TEST_ID_HIGH(5), #TEST_ID_LOW(5), #INPUT_X(16hadef), #INPUT_Y(16h2000), #OPCODE(6b011111), #EXPECTED_OUTPUT(16hffff));
      statement_tester test_56 (#TEST_ID_HIGH(5), #TEST_ID_LOW(6), #INPUT_X(16hffff), #INPUT_Y(16h0001), #OPCODE(6b100000), #EXPECTED_OUTPUT(16hfffe));
      statement_tester test_57 (#TEST_ID_HIGH(5), #TEST_ID_LOW(7), #INPUT_X(16hffff), #INPUT_Y(16h0008), #OPCODE(6b100000), #EXPECTED_OUTPUT(16hff00));
      statement_tester test_58 (#TEST_ID_HIGH(5), #TEST_ID_LOW(8), #INPUT_X(16hffff), #INPUT_Y(16h0001), #OPCODE(6b100001), #EXPECTED_OUTPUT(16h7fff));
      statement_tester test_59 (#TEST_ID_HIGH(5), #TEST_ID_LOW(9), #INPUT_X(16hffff), #INPUT_Y(16h0008), #OPCODE(6b100001), #EXPECTED_OUTPUT(16h00ff));
      statement_tester test_60 (#TEST_ID_HIGH(6), #TEST_ID_LOW(0), #INPUT_X(16hffff), #INPUT_Y(16h0001), #OPCODE(6b100011), #EXPECTED_OUTPUT(16hffff));
      statement_tester test_61 (#TEST_ID_HIGH(6), #TEST_ID_LOW(1), #INPUT_X(16h3fff), #INPUT_Y(16h0008), #OPCODE(6b100011), #EXPECTED_OUTPUT(16h003f));
     
     
     
      statement_tester test_68 (#TEST_ID_HIGH(6), #TEST_ID_LOW(8), #INPUT_X(16h7fff), #INPUT_Y(16h7fff), #OPCODE(6b110011), #EXPECTED_OUTPUT(16h0001));
      statement_tester test_69 (#TEST_ID_HIGH(6), #TEST_ID_LOW(9), #INPUT_X(16h7fff), #INPUT_Y(16h0000), #OPCODE(6b110011), #EXPECTED_OUTPUT(16h0000));
      statement_tester test_70 (#TEST_ID_HIGH(7), #TEST_ID_LOW(0), #INPUT_X(16h7fff), #INPUT_Y(16h7fff), #OPCODE(6b110101), #EXPECTED_OUTPUT(16h0000));
      statement_tester test_71 (#TEST_ID_HIGH(7), #TEST_ID_LOW(1), #INPUT_X(16h0000), #INPUT_Y(16h7fff), #OPCODE(6b110101), #EXPECTED_OUTPUT(16h0001));
      statement_tester test_72 (#TEST_ID_HIGH(7), #TEST_ID_LOW(2), #INPUT_X(16h7fff), #INPUT_Y(16h0000), #OPCODE(6b110111), #EXPECTED_OUTPUT(16h0000));
      statement_tester test_73 (#TEST_ID_HIGH(7), #TEST_ID_LOW(3), #INPUT_X(16h2121), #INPUT_Y(16h2121), #OPCODE(6b110111), #EXPECTED_OUTPUT(16h0001));
      statement_tester test_74 (#TEST_ID_HIGH(7), #TEST_ID_LOW(4), #INPUT_X(16h23f4), #INPUT_Y(16h0001), #OPCODE(6b111011), #EXPECTED_OUTPUT(16h23f4));
      statement_tester test_75 (#TEST_ID_HIGH(7), #TEST_ID_LOW(5), #INPUT_X(16h0202), #INPUT_Y(16hf007), #OPCODE(6b111011), #EXPECTED_OUTPUT(16hf007));
      statement_tester test_76 (#TEST_ID_HIGH(7), #TEST_ID_LOW(6), #INPUT_X(16hc103), #INPUT_Y(16hc102), #OPCODE(6b111101), #EXPECTED_OUTPUT(16hc102));
      statement_tester test_77 (#TEST_ID_HIGH(7), #TEST_ID_LOW(7), #INPUT_X(16hffff), #INPUT_Y(16hffff), #OPCODE(6b111101), #EXPECTED_OUTPUT(16hffff));
    }
  }

  sig restart;
  sig compulsory_error;

  always {
    io_seg = 0;
    io_sel = 0;
    opcode_led = 0;

    button_cond.in = restart_btn;
    edge.in = button_cond.out;
    restart = edge.out;

    required_error.in = forced_error;
    error_edge.in = required_error.out;
    compulsory_error = error_edge.out;

    seg_display.values = {4b0,4b0,4b0,4b0};

    test_0.start = 0;
    test_1.start = 0;
    test_2.start = 0;
    test_3.start = 0;
    test_4.start = 0;
    test_5.start = 0;
   
  
    test_9.start = 0;
    test_10.start = 0;
    test_11.start = 0;
  
    test_24.start = 0;
    test_25.start = 0;
    test_26.start = 0;
    test_27.start = 0;
   
    test_30.start = 0;
    test_31.start = 0;

    test_34.start = 0;
    test_35.start = 0;
    test_36.start = 0;
    test_37.start = 0;
    test_38.start = 0;
    test_39.start = 0;
    test_40.start = 0;
    test_41.start = 0;
    test_42.start = 0;
    test_43.start = 0;
    test_44.start = 0;
    test_45.start = 0;
   
    test_48.start = 0;
    test_49.start = 0;

    test_52.start = 0;
    test_53.start = 0;
    test_54.start = 0;
    test_55.start = 0;
    test_56.start = 0;
    test_57.start = 0;
    test_58.start = 0;
    test_59.start = 0;
    test_60.start = 0;
    test_61.start = 0;

    test_68.start = 0;
    test_69.start = 0;
    test_70.start = 0;
    test_71.start = 0;
    test_72.start = 0;
    test_73.start = 0;
    test_74.start = 0;
    test_75.start = 0;
    test_76.start = 0;
    test_77.start = 0;

    case (autostate.q) {
      autostate.STANDBY:
        if (start) {
          autostate.d = autostate.TEST_0;
        }
      
      autostate.TEST_0:
        io_seg = test_0.io_seg;
        io_sel = test_0.io_sel;
        opcode_led = test_0.opcode_led;
        test_0.start = 1;
        if (test_0.done) {
          autostate.d = autostate.TEST_1;
        }
        

      autostate.TEST_1:
        io_seg = test_1.io_seg;
        io_sel = test_1.io_sel;
        opcode_led = test_1.opcode_led;
        test_1.start = 1;
        if (test_1.done) {
          autostate.d = autostate.TEST_2;
        }
     
      autostate.TEST_2:
        io_seg = test_2.io_seg;
        io_sel = test_2.io_sel;
        opcode_led = test_2.opcode_led;
        test_2.start = 1;
        if (test_2.done) {
          autostate.d = autostate.TEST_3;
        }
      
      autostate.TEST_3:
        io_seg = test_3.io_seg;
        io_sel = test_3.io_sel;
        opcode_led = test_3.opcode_led;
        test_3.start = 1;
        if (test_3.done) {
          autostate.d = autostate.TEST_4;
        }
       
      autostate.TEST_4:
        io_seg = test_4.io_seg;
        io_sel = test_4.io_sel;
        opcode_led = test_4.opcode_led;
        test_4.start = 1;
        if (test_4.done) {
          autostate.d = autostate.TEST_5;
        }
       
      autostate.TEST_5:
        io_seg = test_5.io_seg;
        io_sel = test_5.io_sel;
        opcode_led = test_5.opcode_led;
        test_5.start = 1;
        if (test_5.done) {
          autostate.d = autostate.TEST_8;
        }
     

      
      autostate.TEST_9:
        
        io_seg = test_9.io_seg;
        io_sel = test_9.io_sel;
        if(compulsory_error){
        
        opcode_led = 6b111111;
        }
        else{
        opcode_led   = test_9.opcode_led;
        }
        test_9.start = 1;
        if (test_9.done) {
          autostate.d = autostate.TEST_10;
        }
        else {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_10:
        io_seg = test_10.io_seg;
        io_sel = test_10.io_sel;
        opcode_led = test_10.opcode_led;
        test_10.start = 1;
        if (test_10.done) {
          autostate.d = autostate.TEST_11;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_11:
        io_seg = test_11.io_seg;
        io_sel = test_11.io_sel;
        opcode_led = test_11.opcode_led;
        test_11.start = 1;
        if (test_11.done) {
          autostate.d = autostate.TEST_24;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

  

 


      autostate.TEST_24:
        io_seg = test_24.io_seg;
        io_sel = test_24.io_sel;
        opcode_led = test_24.opcode_led;
        test_24.start = 1;
        if (test_24.done) {
          autostate.d = autostate.TEST_25;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_25:
        io_seg = test_25.io_seg;
        io_sel = test_25.io_sel;
        opcode_led = test_25.opcode_led;
        test_25.start = 1;
        if (test_25.done) {
          autostate.d = autostate.TEST_26;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_26:
        io_seg = test_26.io_seg;
        io_sel = test_26.io_sel;
        opcode_led = test_26.opcode_led;
        test_26.start = 1;
        if (test_26.done) {
          autostate.d = autostate.TEST_27;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_27:
        io_seg = test_27.io_seg;
        io_sel = test_27.io_sel;
        opcode_led = test_27.opcode_led;
        test_27.start = 1;
        if (test_27.done) {
          autostate.d = autostate.TEST_30;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

  
      autostate.TEST_30:
        io_seg = test_30.io_seg;
        io_sel = test_30.io_sel;
        opcode_led = test_30.opcode_led;
        test_30.start = 1;
        if (test_30.done) {
          autostate.d = autostate.TEST_31;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_31:
        io_seg = test_31.io_seg;
        io_sel = test_31.io_sel;
        opcode_led = test_31.opcode_led;
        test_31.start = 1;
        if (test_31.done) {
          autostate.d = autostate.TEST_34;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }


      autostate.TEST_34:
        io_seg = test_34.io_seg;
        io_sel = test_34.io_sel;
        opcode_led = test_34.opcode_led;
        test_34.start = 1;
        if (test_34.done) {
          autostate.d = autostate.TEST_35;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_35:
        io_seg = test_35.io_seg;
        io_sel = test_35.io_sel;
        opcode_led = test_35.opcode_led;
        test_35.start = 1;
        if (test_35.done) {
          autostate.d = autostate.TEST_36;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_36:
        io_seg = test_36.io_seg;
        io_sel = test_36.io_sel;
        opcode_led = test_36.opcode_led;
        test_36.start = 1;
        if (test_36.done) {
          autostate.d = autostate.TEST_37;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_37:
        io_seg = test_37.io_seg;
        io_sel = test_37.io_sel;
        opcode_led = test_37.opcode_led;
        test_37.start = 1;
        if (test_37.done) {
          autostate.d = autostate.TEST_38;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_38:
        io_seg = test_38.io_seg;
        io_sel = test_38.io_sel;
        opcode_led = test_38.opcode_led;
        test_38.start = 1;
        if (test_38.done) {
          autostate.d = autostate.TEST_39;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_39:
        io_seg = test_39.io_seg;
        io_sel = test_39.io_sel;
        opcode_led = test_39.opcode_led;
        test_39.start = 1;
        if (test_39.done) {
          autostate.d = autostate.TEST_40;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_40:
        io_seg = test_40.io_seg;
        io_sel = test_40.io_sel;
        opcode_led = test_40.opcode_led;
        test_40.start = 1;
        if (test_40.done) {
          autostate.d = autostate.TEST_41;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_41:
        io_seg = test_41.io_seg;
        io_sel = test_41.io_sel;
        opcode_led = test_41.opcode_led;
        test_41.start = 1;
        if (test_41.done) {
          autostate.d = autostate.TEST_42;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_42:
        io_seg = test_42.io_seg;
        io_sel = test_42.io_sel;
        opcode_led = test_42.opcode_led;
        test_42.start = 1;
        if (test_42.done) {
          autostate.d = autostate.TEST_43;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_43:
        io_seg = test_43.io_seg;
        io_sel = test_43.io_sel;
        opcode_led = test_43.opcode_led;
        test_43.start = 1;
        if (test_43.done) {
          autostate.d = autostate.TEST_44;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_44:
        io_seg = test_44.io_seg;
        io_sel = test_44.io_sel;
        opcode_led = test_44.opcode_led;
        test_44.start = 1;
        if (test_44.done) {
          autostate.d = autostate.TEST_45;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_45:
        io_seg = test_45.io_seg;
        io_sel = test_45.io_sel;
        opcode_led = test_45.opcode_led;
        test_45.start = 1;
        if (test_45.done) {
          autostate.d = autostate.TEST_48;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

     

   
      autostate.TEST_48:
        io_seg = test_48.io_seg;
        io_sel = test_48.io_sel;
        opcode_led = test_48.opcode_led;
        test_48.start = 1;
        if (test_48.done) {
          autostate.d = autostate.TEST_49;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_49:
        io_seg = test_49.io_seg;
        io_sel = test_49.io_sel;
        opcode_led = test_49.opcode_led;
        test_49.start = 1;
        if (test_49.done) {
          autostate.d = autostate.TEST_52;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      
  

      autostate.TEST_52:
        io_seg = test_52.io_seg;
        io_sel = test_52.io_sel;
        opcode_led = test_52.opcode_led;
        test_52.start = 1;
        if (test_52.done) {
          autostate.d = autostate.TEST_53;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_53:
        io_seg = test_53.io_seg;
        io_sel = test_53.io_sel;
        opcode_led = test_53.opcode_led;
        test_53.start = 1;
        if (test_53.done) {
          autostate.d = autostate.TEST_54;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_54:
        io_seg = test_54.io_seg;
        io_sel = test_54.io_sel;
        opcode_led = test_54.opcode_led;
        test_54.start = 1;
        if (test_54.done) {
          autostate.d = autostate.TEST_55;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_55:
        io_seg = test_55.io_seg;
        io_sel = test_55.io_sel;
        opcode_led = test_55.opcode_led;
        test_55.start = 1;
        if (test_55.done) {
          autostate.d = autostate.TEST_56;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_56:
        io_seg = test_56.io_seg;
        io_sel = test_56.io_sel;
        opcode_led = test_56.opcode_led;
        test_56.start = 1;
        if (test_56.done) {
          autostate.d = autostate.TEST_57;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_57:
        io_seg = test_57.io_seg;
        io_sel = test_57.io_sel;
        opcode_led = test_57.opcode_led;
        test_57.start = 1;
        if (test_57.done) {
          autostate.d = autostate.TEST_58;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_58:
        io_seg = test_58.io_seg;
        io_sel = test_58.io_sel;
        opcode_led = test_58.opcode_led;
        test_58.start = 1;
        if (test_58.done) {
          autostate.d = autostate.TEST_59;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_59:
        io_seg = test_59.io_seg;
        io_sel = test_59.io_sel;
        opcode_led = test_59.opcode_led;
        test_59.start = 1;
        if (test_59.done) {
          autostate.d = autostate.TEST_60;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_60:
        io_seg = test_60.io_seg;
        io_sel = test_60.io_sel;
        opcode_led = test_60.opcode_led;
        test_60.start = 1;
        if (test_60.done) {
          autostate.d = autostate.TEST_61;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_61:
        io_seg = test_61.io_seg;
        io_sel = test_61.io_sel;
        opcode_led = test_61.opcode_led;
        test_61.start = 1;
        if (test_61.done) {
          autostate.d = autostate.TEST_68;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }


      autostate.TEST_68:
        io_seg = test_68.io_seg;
        io_sel = test_68.io_sel;
        opcode_led = test_68.opcode_led;
        test_68.start = 1;
        if (test_68.done) {
          autostate.d = autostate.TEST_69;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_69:
        io_seg = test_69.io_seg;
        io_sel = test_69.io_sel;
        opcode_led = test_69.opcode_led;
        test_69.start = 1;
        if (test_69.done) {
          autostate.d = autostate.TEST_70;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_70:
        io_seg = test_70.io_seg;
        io_sel = test_70.io_sel;
        opcode_led = test_70.opcode_led;
        test_70.start = 1;
        if (test_70.done) {
          autostate.d = autostate.TEST_71;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_71:
        io_seg = test_71.io_seg;
        io_sel = test_71.io_sel;
        opcode_led = test_71.opcode_led;
        test_71.start = 1;
        if (test_71.done) {
          autostate.d = autostate.TEST_72;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_72:
        io_seg = test_72.io_seg;
        io_sel = test_72.io_sel;
        opcode_led = test_72.opcode_led;
        test_72.start = 1;
        if (test_72.done) {
          autostate.d = autostate.TEST_73;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_73:
        io_seg = test_73.io_seg;
        io_sel = test_73.io_sel;
        opcode_led = test_73.opcode_led;
        test_73.start = 1;
        if (test_73.done) {
          autostate.d = autostate.TEST_74;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_74:
        io_seg = test_74.io_seg;
        io_sel = test_74.io_sel;
        opcode_led = test_74.opcode_led;
        test_74.start = 1;
        if (test_74.done) {
          autostate.d = autostate.TEST_75;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_75:
        io_seg = test_75.io_seg;
        io_sel = test_75.io_sel;
        opcode_led = test_75.opcode_led;
        test_75.start = 1;
        if (test_75.done) {
          autostate.d = autostate.TEST_76;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_76:
        io_seg = test_76.io_seg;
        io_sel = test_76.io_sel;
        opcode_led = test_76.opcode_led;
        test_76.start = 1;
        if (test_76.done) {
          autostate.d = autostate.TEST_77;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }

      autostate.TEST_77:
        io_seg = test_77.io_seg;
        io_sel = test_77.io_sel;
        opcode_led = test_77.opcode_led;
        test_77.start = 1;
        if (test_77.done) {
          autostate.d = autostate.DONE;
        }
        if (compulsory_error) {
          autostate.d = autostate.ERROR;
        }
      
      autostate.DONE:
        if (restart) {
          autostate.d = autostate.TEST_0;
        }

      autostate.ERROR:
        opcode_led = 6b000000;
        seg_display.values = {4he, 4he, 4he, 4he}; // EEEE
        io_seg = ~seg_display.seg;
        io_sel = ~seg_display.sel;
        if (restart) {
          autostate.d = autostate.TEST_0;
        }
    }
  }
}